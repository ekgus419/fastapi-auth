"""create users and roles tables

Revision ID: 9e6637e6b059
Revises: 
Create Date: 2025-07-12 15:30:46.739132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9e6637e6b059'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False, comment='PK: 역할 ID'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='역할 이름 (예: Admin, Member)'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='역할 설명'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='수정 시각'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Soft Delete 시각 (null이면 유효)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False, comment='PK: 사용자 ID'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='로그인용 이메일 주소'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='bcrypt 해시된 로그인 비밀번호'),
    sa.Column('name', sa.String(length=100), nullable=True, comment='사용자 이름 (선택)'),
    sa.Column('role_id', sa.Integer(), nullable=False, comment='FK: 역할 ID (roles.id)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='활성 상태 여부'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='수정 시각'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Soft Delete 시각 (null이면 유효)'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )

    # 초기 필요 데이터 set up

    # bcrypt hash for password: "admin1234"
    hashed_password = "$2b$12$BnE5W.wpath3/kCOn7aTZOEkwAr6RzXUzbuYz9I2TIEBDBa.AK02y"

    # 1. Role 데이터 삽입
    op.execute("""
        INSERT INTO roles (name, description, created_at, updated_at)
        VALUES 
            ('Admin', '관리자 역할', now(), now()),
            ('Member', '일반 사용자 역할', now(), now());
    """)

    # 2. Admin 사용자 삽입 (role_id = 1 가정)
    op.execute(f"""
        INSERT INTO users (email, password, name, role_id, is_active, created_at, updated_at)
        VALUES (
            'admin@example.com',
            '{hashed_password}',
            '관리자',
            (SELECT id FROM roles WHERE name = 'Admin'),
            TRUE,
            now(),
            now()
        );
    """)

    # users 테이블 인덱스 추가
    op.create_index("idx_users_email", "users", ["email"])
    op.create_index("idx_users_name", "users", ["name"])
    op.create_index("idx_users_role_id", "users", ["role_id"])
    op.create_index("idx_users_is_active", "users", ["is_active"])
    op.create_index("idx_users_created_at", "users", ["created_at"])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
